#!/bin/python3

import os, threading, random, sys, json
from colorama import Fore, init
from django.utils.crypto import get_random_string
init(autoreset=True)

# Variables
tc = 0
hasthingsinside = True

## Where the core resides ##

# Parse configs keys:[]
class ConfigParser:
    def __init__(self, jk):
        self.jk = jk

    def getcfgvalue(self):
        with open('/opt/config/panicwipe/config.json','r') as cf:
            return json.loads(cf.read())[self.jk]

# Make everything quiet
def shush():
    sys.stdout = open(os.devnull, 'w')

# To generate a random file name
def randomstring():
    return get_random_string(length=8, allowed_chars='abcdefghijklmnopqrstuvwxyz1234567890')

# R.O.D.D(Rename, overwrite, delete, destroy)
def rodd(file, noo=ConfigParser('overtime').getcfgvalue()):
    tc =+ 1
    fn2 = randomstring()
    try:
        with open(file, 'rb+') as lf:
            size = lf.tell()
        with open(file, 'wb+') as f:
            for times in range(noo):
                f.write(os.urandom(size))
        os.rename(file, fn2)
        os.remove(fn2)
        print(f'{Fore.BLUE}File {file} deleted.')
    except FileNotFoundError:
        os.system(f'rm {file}')
        print(f'{Fore.YELLOW}File {file} not found.')
        pass
    tc =- 1

# DR.D.D(Directory rename, delete, destruction)
def drdd(rd):
    if not os.listdir(rd):
        rfn = randomstring()
        os.rename(rd, rfn)
        os.rmdir(rfn)
        print(f'{Fore.BLUE}Directory {rd} deleted.')

# The confirmation to wipe everything
confirmation = input(f'{Fore.YELLOW}Sure you wanna delete every single file? YES/NO {Fore.WHITE}')
if ConfigParser('verbose').getcfgvalue() is False: shush()
if confirmation == 'YES':
    dirs = ConfigParser('extra-dirs').getcfgvalue().split(',')
    with open('/etc/passwd', 'r') as f:
        for users in f.readlines():
            home = users.split(':')[5]
            if home.startswith('/home') or home.startswith('/root'):
                dirs.append(home)
    for dire in dirs:
        while hasthingsinside == True:
            if os.path.exists(dire) == False:
                print(f"{Fore.RED}Directory {dire} doesn't exist")
                break
            elif tc < ConfigParser('threads').getcfgvalue():
                for rd, d, f in os.walk(dire):
                    if not os.listdir(rd):
                        drdd(rd)
                        break
                    for fn in f:
                        if len(os.listdir(dire)) != 0:
                            hasthingsinside = True
                            threading.Thread(target=rodd(os.path.join(rd,fn))).start()
                        else:
                            hasthingsinside = False
                            threading.Thread(target=drdd(dire)).start()
                            print(f'{Fore.GREEN}{dire} has been wiped and deleted!')
                            break
        hasthingsinside = True
else:
    print(f'{Fore.RED}Exiting!')
    exit()

print(f"{Fore.GREEN}The panic has gone away, as everything got wiped to dust, it's time to rest.")

if ConfigParser('shutdown').getcfgvalue(): os.system('poweroff')
